module shifter (
    input a[16],
    input b[4],
    input alufn_signal[6],
    output shift[16]
  ) {
  
  x_bit_left_shifter leftshifter8(#SHIFT(8));
  x_bit_left_shifter leftshifter4(#SHIFT(4));
  x_bit_left_shifter leftshifter2(#SHIFT(2));  
  x_bit_left_shifter leftshifter1(#SHIFT(1));
  
  always { 
    case (alufn_signal[1:0]) {
      b00:
        leftshifter8.type = 0;
        leftshifter4.type = 0;
        leftshifter2.type = 0;
        leftshifter1.type = 0;
        
        leftshifter8.a = a;
        leftshifter8.pad = 0;
        leftshifter8.shift = b[3];
        
        leftshifter4.a = leftshifter8.out;
        leftshifter4.pad = 0;
        leftshifter4.shift = b[2];
        
        leftshifter2.a = leftshifter4.out;
        leftshifter2.pad = 0;
        leftshifter2.shift = b[1];
        
        leftshifter1.a = leftshifter2.out;
        leftshifter1.pad = 0;
        leftshifter1.shift = b[0];
        
        // Output
        shift = leftshifter1.out;
      b01:
        leftshifter8.type = 1;
        leftshifter4.type = 1;
        leftshifter2.type = 1;
        leftshifter1.type = 1;
        
        leftshifter8.a = a;
        leftshifter8.pad = 0;
        leftshifter8.shift = b[3];
        
        leftshifter4.a = leftshifter8.out;
        leftshifter4.pad = 0;
        leftshifter4.shift = b[2];
        
        leftshifter2.a = leftshifter4.out;
        leftshifter2.pad = 0;
        leftshifter2.shift = b[1];
        
        leftshifter1.a = leftshifter2.out;
        leftshifter1.pad = 0;
        leftshifter1.shift = b[0];
        
        // Output
        shift = leftshifter1.out;
      b11:
        leftshifter8.type = 1;
        leftshifter4.type = 1;
        leftshifter2.type = 1;
        leftshifter1.type = 1;
        
        leftshifter8.a = a;
        leftshifter8.pad = a[15];
        leftshifter8.shift = b[3];
        
        leftshifter4.a = leftshifter8.out;
        leftshifter4.pad = a[15];
        leftshifter4.shift = b[2];
        
        leftshifter2.a = leftshifter4.out;
        leftshifter2.pad = a[15];
        leftshifter2.shift = b[1];
        
        leftshifter1.a = leftshifter2.out;
        leftshifter1.pad = a[15];
        leftshifter1.shift = b[0];
        
        // Output
        shift = leftshifter1.out;
      default:
        leftshifter8.type = 0;
        leftshifter4.type = 0;
        leftshifter2.type = 0;
        leftshifter1.type = 0;
        leftshifter8.a = a;
        leftshifter8.pad = 0;
        leftshifter8.shift = 0;
        leftshifter4.a = a;
        leftshifter4.pad = 0;
        leftshifter4.shift = 0;
        leftshifter2.a = a;
        leftshifter2.pad = 0;
        leftshifter2.shift = 0;
        leftshifter1.a = a;
        leftshifter1.pad = 0;
        leftshifter1.shift = 0;
        shift = a;
    }
  }
}